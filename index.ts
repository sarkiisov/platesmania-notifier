import { getInput } from "@actions/core";
import { context, getOctokit } from "@actions/github";
import { Telegraf } from "telegraf";

(async () => {
  const telegramBotToken = getInput("telegram-bot-token");
  const telegramChatId = getInput("telegram-chat-id");
  const githubToken = getInput("github-token");

  const bot = new Telegraf(telegramBotToken);

  const octokit = getOctokit(githubToken);

  const runId = context.runId;
  const { owner, repo } = context.repo;

  const {
    data: { jobs },
  } = await octokit.rest.actions.listJobsForWorkflowRun({
    owner,
    repo,
    run_id: runId,
  });

  const preparedJobs = jobs
    .filter((job) => !!job.conclusion)
    .toSorted((a, b) => {
      const dateA = new Date(a.completed_at).getTime();
      const dateB = new Date(b.completed_at).getTime();

      return dateA - dateB;
    })
    .map(({ name, conclusion }) => ({
      name,
      conclusion,
    }));

  telegramChatId.split(",").forEach((id) => {
    const fullRef = context.ref;
    const branchName = fullRef.replace("refs/heads/", "");
    const titleMessage = `‚ö†Ô∏è –ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç [${repo}](https://github.com/${owner}/${repo}) –≤ –≤–µ—Ç–∫–µ \`${branchName}\``;

    const pipelineUrl = `https://github.com/${owner}/${repo}/actions/runs/${runId}`;
    const pipelineMessage = `[–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ](${pipelineUrl})`;

    const jobsMessage = preparedJobs
      .map(
        (job) =>
          `${
            {
              queued: "‚è≥ –í –æ—á–µ—Ä–µ–¥–∏",
              in_progress: "üîÑ –í –ø—Ä–æ—Ü–µ—Å—Å–µ",
              completed: "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ",
              waiting: "‚è∏Ô∏è –û–∂–∏–¥–∞–µ—Ç",

              success: "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ",
              failure: "‚ùå –û—à–∏–±–∫–∞",
              neutral: "‚ö™ –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ",
              cancelled: "üö´ –û—Ç–º–µ–Ω–µ–Ω–æ",
              skipped: "‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ",
              timed_out: "‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ",
              action_required: "‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏–µ",
            }[job.conclusion]
          } - ${job.name}`
      )
      .join("\n");

    const message = bot.telegram.sendMessage(
      id,
      `${titleMessage}\n\n${jobsMessage}\n\n${pipelineMessage}`.replace(
        /-/g,
        "\\-"
      ),
      { parse_mode: "MarkdownV2" }
    );
  });
})();
